00000000  2D 2D 20 6C 69 66 65 2E 6C 75 61 0A 2D 2D 20 6F  -- life.lua.-- o
00000010  72 69 67 69 6E 61 6C 20 62 79 20 44 61 76 65 20  riginal by Dave 
00000020  42 6F 6C 6C 69 6E 67 65 72 20 3C 44 42 6F 6C 6C  Bollinger <DBoll
00000030  69 6E 67 65 72 40 63 6F 6D 70 75 73 65 72 76 65  inger@compuserve
00000040  2E 63 6F 6D 3E 20 70 6F 73 74 65 64 20 74 6F 20  .com> posted to 
00000050  6C 75 61 2D 6C 0A 2D 2D 20 6D 6F 64 69 66 69 65  lua-l.-- modifie
00000060  64 20 74 6F 20 75 73 65 20 41 4E 53 49 20 74 65  d to use ANSI te
00000070  72 6D 69 6E 61 6C 20 65 73 63 61 70 65 20 73 65  rminal escape se
00000080  71 75 65 6E 63 65 73 0A 2D 2D 20 6D 6F 64 69 66  quences.-- modif
00000090  69 65 64 20 74 6F 20 75 73 65 20 66 6F 72 20 69  ied to use for i
000000A0  6E 73 74 65 61 64 20 6F 66 20 77 68 69 6C 65 0A  nstead of while.
000000B0  0A 6C 6F 63 61 6C 20 77 72 69 74 65 3D 69 6F 2E  .local write=io.
000000C0  77 72 69 74 65 0A 0A 41 4C 49 56 45 3D 22 A5 22  write..ALIVE="¥"
000000D0  09 44 45 41 44 3D 22 FE 22 0A 41 4C 49 56 45 3D  .DEAD="þ".ALIVE=
000000E0  22 4F 22 09 44 45 41 44 3D 22 2D 22 0A 0A 66 75  "O".DEAD="-"..fu
000000F0  6E 63 74 69 6F 6E 20 64 65 6C 61 79 28 29 20 2D  nction delay() -
00000100  2D 20 4E 4F 54 45 3A 20 53 59 53 54 45 4D 2D 44  - NOTE: SYSTEM-D
00000110  45 50 45 4E 44 45 4E 54 2C 20 61 64 6A 75 73 74  EPENDENT, adjust
00000120  20 61 73 20 6E 65 63 65 73 73 61 72 79 0A 20 20   as necessary.  
00000130  66 6F 72 20 69 3D 31 2C 31 30 30 30 30 20 64 6F  for i=1,10000 do
00000140  20 65 6E 64 0A 20 20 2D 2D 20 6C 6F 63 61 6C 20   end.  -- local 
00000150  69 3D 6F 73 2E 63 6C 6F 63 6B 28 29 2B 31 20 77  i=os.clock()+1 w
00000160  68 69 6C 65 28 6F 73 2E 63 6C 6F 63 6B 28 29 3C  hile(os.clock()<
00000170  69 29 20 64 6F 20 65 6E 64 0A 65 6E 64 0A 0A 66  i) do end.end..f
00000180  75 6E 63 74 69 6F 6E 20 41 52 52 41 59 32 44 28  unction ARRAY2D(
00000190  77 2C 68 29 0A 20 20 6C 6F 63 61 6C 20 74 20 3D  w,h).  local t =
000001A0  20 7B 77 3D 77 2C 68 3D 68 7D 0A 20 20 66 6F 72   {w=w,h=h}.  for
000001B0  20 79 3D 31 2C 68 20 64 6F 0A 20 20 20 20 74 5B   y=1,h do.    t[
000001C0  79 5D 20 3D 20 7B 7D 0A 20 20 20 20 66 6F 72 20  y] = {}.    for 
000001D0  78 3D 31 2C 77 20 64 6F 0A 20 20 20 20 20 20 74  x=1,w do.      t
000001E0  5B 79 5D 5B 78 5D 3D 30 0A 20 20 20 20 65 6E 64  [y][x]=0.    end
000001F0  0A 20 20 65 6E 64 0A 20 20 72 65 74 75 72 6E 20  .  end.  return 
00000200  74 0A 65 6E 64 0A 0A 5F 43 45 4C 4C 53 20 3D 20  t.end.._CELLS = 
00000210  7B 7D 0A 0A 2D 2D 20 67 69 76 65 20 62 69 72 74  {}..-- give birt
00000220  68 20 74 6F 20 61 20 22 73 68 61 70 65 22 20 77  h to a "shape" w
00000230  69 74 68 69 6E 20 74 68 65 20 63 65 6C 6C 20 61  ithin the cell a
00000240  72 72 61 79 0A 66 75 6E 63 74 69 6F 6E 20 5F 43  rray.function _C
00000250  45 4C 4C 53 3A 73 70 61 77 6E 28 73 68 61 70 65  ELLS:spawn(shape
00000260  2C 6C 65 66 74 2C 74 6F 70 29 0A 20 20 66 6F 72  ,left,top).  for
00000270  20 79 3D 30 2C 73 68 61 70 65 2E 68 2D 31 20 64   y=0,shape.h-1 d
00000280  6F 0A 20 20 20 20 66 6F 72 20 78 3D 30 2C 73 68  o.    for x=0,sh
00000290  61 70 65 2E 77 2D 31 20 64 6F 0A 20 20 20 20 20  ape.w-1 do.     
000002A0  20 73 65 6C 66 5B 74 6F 70 2B 79 5D 5B 6C 65 66   self[top+y][lef
000002B0  74 2B 78 5D 20 3D 20 73 68 61 70 65 5B 79 2A 73  t+x] = shape[y*s
000002C0  68 61 70 65 2E 77 2B 78 2B 31 5D 0A 20 20 20 20  hape.w+x+1].    
000002D0  65 6E 64 0A 20 20 65 6E 64 0A 65 6E 64 0A 0A 2D  end.  end.end..-
000002E0  2D 20 72 75 6E 20 74 68 65 20 43 41 20 61 6E 64  - run the CA and
000002F0  20 70 72 6F 64 75 63 65 20 74 68 65 20 6E 65 78   produce the nex
00000300  74 20 67 65 6E 65 72 61 74 69 6F 6E 0A 66 75 6E  t generation.fun
00000310  63 74 69 6F 6E 20 5F 43 45 4C 4C 53 3A 65 76 6F  ction _CELLS:evo
00000320  6C 76 65 28 6E 65 78 74 29 0A 20 20 6C 6F 63 61  lve(next).  loca
00000330  6C 20 79 6D 31 2C 79 2C 79 70 31 2C 79 69 3D 73  l ym1,y,yp1,yi=s
00000340  65 6C 66 2E 68 2D 31 2C 73 65 6C 66 2E 68 2C 31  elf.h-1,self.h,1
00000350  2C 73 65 6C 66 2E 68 0A 20 20 77 68 69 6C 65 20  ,self.h.  while 
00000360  79 69 20 3E 20 30 20 64 6F 0A 20 20 20 20 6C 6F  yi > 0 do.    lo
00000370  63 61 6C 20 78 6D 31 2C 78 2C 78 70 31 2C 78 69  cal xm1,x,xp1,xi
00000380  3D 73 65 6C 66 2E 77 2D 31 2C 73 65 6C 66 2E 77  =self.w-1,self.w
00000390  2C 31 2C 73 65 6C 66 2E 77 0A 20 20 20 20 77 68  ,1,self.w.    wh
000003A0  69 6C 65 20 78 69 20 3E 20 30 20 64 6F 0A 20 20  ile xi > 0 do.  
000003B0  20 20 20 20 6C 6F 63 61 6C 20 73 75 6D 20 3D 20      local sum = 
000003C0  73 65 6C 66 5B 79 6D 31 5D 5B 78 6D 31 5D 20 2B  self[ym1][xm1] +
000003D0  20 73 65 6C 66 5B 79 6D 31 5D 5B 78 5D 20 2B 20   self[ym1][x] + 
000003E0  73 65 6C 66 5B 79 6D 31 5D 5B 78 70 31 5D 20 2B  self[ym1][xp1] +
000003F0  0A 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  .               
00000400  20 20 20 73 65 6C 66 5B 79 5D 5B 78 6D 31 5D 20     self[y][xm1] 
00000410  2B 20 73 65 6C 66 5B 79 5D 5B 78 70 31 5D 20 2B  + self[y][xp1] +
00000420  0A 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  .               
00000430  20 20 20 73 65 6C 66 5B 79 70 31 5D 5B 78 6D 31     self[yp1][xm1
00000440  5D 20 2B 20 73 65 6C 66 5B 79 70 31 5D 5B 78 5D  ] + self[yp1][x]
00000450  20 2B 20 73 65 6C 66 5B 79 70 31 5D 5B 78 70 31   + self[yp1][xp1
00000460  5D 0A 20 20 20 20 20 20 6E 65 78 74 5B 79 5D 5B  ].      next[y][
00000470  78 5D 20 3D 20 28 28 73 75 6D 3D 3D 32 29 20 61  x] = ((sum==2) a
00000480  6E 64 20 73 65 6C 66 5B 79 5D 5B 78 5D 29 20 6F  nd self[y][x]) o
00000490  72 20 28 28 73 75 6D 3D 3D 33 29 20 61 6E 64 20  r ((sum==3) and 
000004A0  31 29 20 6F 72 20 30 0A 20 20 20 20 20 20 78 6D  1) or 0.      xm
000004B0  31 2C 78 2C 78 70 31 2C 78 69 20 3D 20 78 2C 78  1,x,xp1,xi = x,x
000004C0  70 31 2C 78 70 31 2B 31 2C 78 69 2D 31 0A 20 20  p1,xp1+1,xi-1.  
000004D0  20 20 65 6E 64 0A 20 20 20 20 79 6D 31 2C 79 2C    end.    ym1,y,
000004E0  79 70 31 2C 79 69 20 3D 20 79 2C 79 70 31 2C 79  yp1,yi = y,yp1,y
000004F0  70 31 2B 31 2C 79 69 2D 31 0A 20 20 65 6E 64 0A  p1+1,yi-1.  end.
00000500  65 6E 64 0A 0A 2D 2D 20 6F 75 74 70 75 74 20 74  end..-- output t
00000510  68 65 20 61 72 72 61 79 20 74 6F 20 73 63 72 65  he array to scre
00000520  65 6E 0A 66 75 6E 63 74 69 6F 6E 20 5F 43 45 4C  en.function _CEL
00000530  4C 53 3A 64 72 61 77 28 29 0A 20 20 6C 6F 63 61  LS:draw().  loca
00000540  6C 20 6F 75 74 3D 22 22 20 2D 2D 20 61 63 63 75  l out="" -- accu
00000550  6D 75 6C 61 74 65 20 74 6F 20 72 65 64 75 63 65  mulate to reduce
00000560  20 66 6C 69 63 6B 65 72 0A 20 20 66 6F 72 20 79   flicker.  for y
00000570  3D 31 2C 73 65 6C 66 2E 68 20 64 6F 0A 20 20 20  =1,self.h do.   
00000580  66 6F 72 20 78 3D 31 2C 73 65 6C 66 2E 77 20 64  for x=1,self.w d
00000590  6F 0A 20 20 20 20 20 20 6F 75 74 3D 6F 75 74 2E  o.      out=out.
000005A0  2E 28 28 28 73 65 6C 66 5B 79 5D 5B 78 5D 3E 30  .(((self[y][x]>0
000005B0  29 20 61 6E 64 20 41 4C 49 56 45 29 20 6F 72 20  ) and ALIVE) or 
000005C0  44 45 41 44 29 0A 20 20 20 20 65 6E 64 0A 20 20  DEAD).    end.  
000005D0  20 20 6F 75 74 3D 6F 75 74 2E 2E 22 5C 6E 22 0A    out=out.."\n".
000005E0  20 20 65 6E 64 0A 20 20 77 72 69 74 65 28 6F 75    end.  write(ou
000005F0  74 29 0A 65 6E 64 0A 0A 2D 2D 20 63 6F 6E 73 74  t).end..-- const
00000600  72 75 63 74 6F 72 0A 66 75 6E 63 74 69 6F 6E 20  ructor.function 
00000610  43 45 4C 4C 53 28 77 2C 68 29 0A 20 20 6C 6F 63  CELLS(w,h).  loc
00000620  61 6C 20 63 20 3D 20 41 52 52 41 59 32 44 28 77  al c = ARRAY2D(w
00000630  2C 68 29 0A 20 20 63 2E 73 70 61 77 6E 20 3D 20  ,h).  c.spawn = 
00000640  5F 43 45 4C 4C 53 2E 73 70 61 77 6E 0A 20 20 63  _CELLS.spawn.  c
00000650  2E 65 76 6F 6C 76 65 20 3D 20 5F 43 45 4C 4C 53  .evolve = _CELLS
00000660  2E 65 76 6F 6C 76 65 0A 20 20 63 2E 64 72 61 77  .evolve.  c.draw
00000670  20 3D 20 5F 43 45 4C 4C 53 2E 64 72 61 77 0A 20   = _CELLS.draw. 
00000680  20 72 65 74 75 72 6E 20 63 0A 65 6E 64 0A 0A 2D   return c.end..-
00000690  2D 0A 2D 2D 20 73 68 61 70 65 73 20 73 75 69 74  -.-- shapes suit
000006A0  61 62 6C 65 20 66 6F 72 20 75 73 65 20 77 69 74  able for use wit
000006B0  68 20 73 70 61 77 6E 28 29 20 61 62 6F 76 65 0A  h spawn() above.
000006C0  2D 2D 0A 48 45 41 52 54 20 3D 20 7B 20 31 2C 30  --.HEART = { 1,0
000006D0  2C 31 2C 31 2C 30 2C 31 2C 31 2C 31 2C 31 3B 20  ,1,1,0,1,1,1,1; 
000006E0  77 3D 33 2C 68 3D 33 20 7D 0A 47 4C 49 44 45 52  w=3,h=3 }.GLIDER
000006F0  20 3D 20 7B 20 30 2C 30 2C 31 2C 31 2C 30 2C 31   = { 0,0,1,1,0,1
00000700  2C 30 2C 31 2C 31 3B 20 77 3D 33 2C 68 3D 33 20  ,0,1,1; w=3,h=3 
00000710  7D 0A 45 58 50 4C 4F 44 45 20 3D 20 7B 20 30 2C  }.EXPLODE = { 0,
00000720  31 2C 30 2C 31 2C 31 2C 31 2C 31 2C 30 2C 31 2C  1,0,1,1,1,1,0,1,
00000730  30 2C 31 2C 30 3B 20 77 3D 33 2C 68 3D 34 20 7D  0,1,0; w=3,h=4 }
00000740  0A 46 49 53 48 20 3D 20 7B 20 30 2C 31 2C 31 2C  .FISH = { 0,1,1,
00000750  31 2C 31 2C 31 2C 30 2C 30 2C 30 2C 31 2C 30 2C  1,1,1,0,0,0,1,0,
00000760  30 2C 30 2C 30 2C 31 2C 31 2C 30 2C 30 2C 31 2C  0,0,0,1,1,0,0,1,
00000770  30 3B 20 77 3D 35 2C 68 3D 34 20 7D 0A 42 55 54  0; w=5,h=4 }.BUT
00000780  54 45 52 46 4C 59 20 3D 20 7B 20 31 2C 30 2C 30  TERFLY = { 1,0,0
00000790  2C 30 2C 31 2C 30 2C 31 2C 31 2C 31 2C 30 2C 31  ,0,1,0,1,1,1,0,1
000007A0  2C 30 2C 30 2C 30 2C 31 2C 31 2C 30 2C 31 2C 30  ,0,0,0,1,1,0,1,0
000007B0  2C 31 2C 31 2C 30 2C 30 2C 30 2C 31 3B 20 77 3D  ,1,1,0,0,0,1; w=
000007C0  35 2C 68 3D 35 20 7D 0A 0A 2D 2D 20 74 68 65 20  5,h=5 }..-- the 
000007D0  6D 61 69 6E 20 72 6F 75 74 69 6E 65 0A 66 75 6E  main routine.fun
000007E0  63 74 69 6F 6E 20 4C 49 46 45 28 77 2C 68 29 0A  ction LIFE(w,h).
000007F0  20 20 2D 2D 20 63 72 65 61 74 65 20 74 77 6F 20    -- create two 
00000800  61 72 72 61 79 73 0A 20 20 6C 6F 63 61 6C 20 74  arrays.  local t
00000810  68 69 73 67 65 6E 20 3D 20 43 45 4C 4C 53 28 77  hisgen = CELLS(w
00000820  2C 68 29 0A 20 20 6C 6F 63 61 6C 20 6E 65 78 74  ,h).  local next
00000830  67 65 6E 20 3D 20 43 45 4C 4C 53 28 77 2C 68 29  gen = CELLS(w,h)
00000840  0A 0A 20 20 2D 2D 20 63 72 65 61 74 65 20 73 6F  ..  -- create so
00000850  6D 65 20 6C 69 66 65 0A 20 20 2D 2D 20 61 62 6F  me life.  -- abo
00000860  75 74 20 31 30 30 30 20 67 65 6E 65 72 61 74 69  ut 1000 generati
00000870  6F 6E 73 20 6F 66 20 66 75 6E 2C 20 74 68 65 6E  ons of fun, then
00000880  20 61 20 67 6C 69 64 65 72 20 73 74 65 61 64 79   a glider steady
00000890  2D 73 74 61 74 65 0A 20 20 74 68 69 73 67 65 6E  -state.  thisgen
000008A0  3A 73 70 61 77 6E 28 47 4C 49 44 45 52 2C 35 2C  :spawn(GLIDER,5,
000008B0  34 29 0A 20 20 74 68 69 73 67 65 6E 3A 73 70 61  4).  thisgen:spa
000008C0  77 6E 28 45 58 50 4C 4F 44 45 2C 32 35 2C 31 30  wn(EXPLODE,25,10
000008D0  29 0A 20 20 74 68 69 73 67 65 6E 3A 73 70 61 77  ).  thisgen:spaw
000008E0  6E 28 46 49 53 48 2C 34 2C 31 32 29 0A 0A 20 20  n(FISH,4,12)..  
000008F0  2D 2D 20 72 75 6E 20 75 6E 74 69 6C 20 62 72 65  -- run until bre
00000900  61 6B 0A 20 20 6C 6F 63 61 6C 20 67 65 6E 3D 31  ak.  local gen=1
00000910  0A 20 20 77 72 69 74 65 28 22 5C 30 32 37 5B 32  .  write("\027[2
00000920  4A 22 29 09 2D 2D 20 41 4E 53 49 20 63 6C 65 61  J").-- ANSI clea
00000930  72 20 73 63 72 65 65 6E 0A 20 20 77 68 69 6C 65  r screen.  while
00000940  20 31 20 64 6F 0A 20 20 20 20 74 68 69 73 67 65   1 do.    thisge
00000950  6E 3A 65 76 6F 6C 76 65 28 6E 65 78 74 67 65 6E  n:evolve(nextgen
00000960  29 0A 20 20 20 20 74 68 69 73 67 65 6E 2C 6E 65  ).    thisgen,ne
00000970  78 74 67 65 6E 20 3D 20 6E 65 78 74 67 65 6E 2C  xtgen = nextgen,
00000980  74 68 69 73 67 65 6E 0A 20 20 20 20 77 72 69 74  thisgen.    writ
00000990  65 28 22 5C 30 32 37 5B 48 22 29 09 2D 2D 20 41  e("\027[H").-- A
000009A0  4E 53 49 20 68 6F 6D 65 20 63 75 72 73 6F 72 0A  NSI home cursor.
000009B0  20 20 20 20 74 68 69 73 67 65 6E 3A 64 72 61 77      thisgen:draw
000009C0  28 29 0A 20 20 20 20 77 72 69 74 65 28 22 4C 69  ().    write("Li
000009D0  66 65 20 2D 20 67 65 6E 65 72 61 74 69 6F 6E 20  fe - generation 
000009E0  22 2C 67 65 6E 2C 22 5C 6E 22 29 0A 20 20 20 20  ",gen,"\n").    
000009F0  67 65 6E 3D 67 65 6E 2B 31 0A 20 20 20 20 69 66  gen=gen+1.    if
00000A00  20 67 65 6E 3E 32 30 30 30 20 74 68 65 6E 20 62   gen>2000 then b
00000A10  72 65 61 6B 20 65 6E 64 0A 20 20 20 20 2D 2D 64  reak end.    --d
00000A20  65 6C 61 79 28 29 09 09 2D 2D 20 6E 6F 20 64 65  elay()..-- no de
00000A30  6C 61 79 0A 20 20 65 6E 64 0A 65 6E 64 0A 0A 4C  lay.  end.end..L
00000A40  49 46 45 28 34 30 2C 32 30 29 0A                 IFE(40,20).
